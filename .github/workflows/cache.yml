name: cache

on:
  push:
  pull_request:
  workflow_call:
  workflow_dispatch:

permissions:
  actions: write

jobs:
  nix-build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - channel: nixos-25.05
        - channel: nixpkgs-unstable
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
    - uses: wimpysworld/nothing-but-nix@main
      with:
        nix-permission-edict: true
    - uses: cachix/install-nix-action@v31
      with:
        extra_nix_config: |
          allow-import-from-derivation = false
          keep-going = true
          show-trace = true
        nix_path: nixpkgs=channel:${{ matrix.channel }}
    - uses: cachix/cachix-action@v16
      with:
        name: hmenke
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        pushFilter: "(-source$|nixpkgs.tar.gz$)"
    - name: Run nix build
      run: nix build --print-build-logs --no-link --file ./default.nix
    - name: Prepare artifacts
      if: ${{ matrix.channel == 'nixos-25.05' }}
      run: |
        nix build --file ./default.nix -o .local local-bin
        tar cvf local-bin.tar --mode='u+rwX,go+rX' --dereference .local/bin/*
        tar cvf local-libexec.tar --mode='u+rwX,go+rX' .local/libexec/git-core/*
        gzip -fv --rsyncable local-bin.tar
        gzip -fv --rsyncable local-libexec.tar
    - name: Delete old artifacts
      uses: actions/github-script@v7
      if: ${{ matrix.channel == 'nixos-25.05' }}
      with:
        script: |
          const { owner, repo } = context.issue
          const res = await github.rest.actions.listArtifactsForRepo({owner, repo})
          res.data.artifacts.forEach(({ id }) => {
            github.rest.actions.deleteArtifact({owner, repo, artifact_id: id})
          })
    - uses: actions/upload-artifact@v4
      if: ${{ matrix.channel == 'nixos-25.05' }}
      with:
        path: |
          local-bin.tar.gz
          local-libexec.tar.gz
